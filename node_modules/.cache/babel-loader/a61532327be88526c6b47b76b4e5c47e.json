{"ast":null,"code":"var _jsxFileName = \"/home/sayed/todolist/src/components/Todo.jsx\";\nimport React from \"react\";\nimport { translate } from \"../utils/translate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todo1 extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      text: \"\"\n    };\n  }\n\n  componentDidMount() {\n    translate(this.props.text, {\n      to: \"fr\"\n    }).then(res => {\n      this.setState({\n        text: res.text\n      });\n    }).catch(err => console.error(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.state.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default function Todo(_ref) {\n  let {\n    todo,\n    handleDone\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: todo.done,\n      onChange: () => handleDone(todo.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n_c = Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","translate","Todo1","Component","constructor","props","state","text","componentDidMount","to","then","res","setState","catch","err","console","error","render","Todo","todo","handleDone","done","id"],"sources":["/home/sayed/todolist/src/components/Todo.jsx"],"sourcesContent":["import React from \"react\";\nimport { translate } from \"../utils/translate\";\nclass Todo1 extends React.Component{\n    constructor(props){\n        super();\n        this.state = {\n            text: \"\",\n        }\n    }\n    componentDidMount(){\n        translate(this.props.text, { to: \"fr\" })\n        .then(res=>{\n            this.setState({text: res.text})\n        })\n        .catch(err=>console.error(err))\n    }\n    \n    render(){\n        return (\n            <li >\n               <input type=\"checkbox\" />\n               <span>{this.state.text }</span>\n            </li>\n           )\n    }\n    \n}\n\nexport default function Todo({todo,handleDone}){\n\n    return (\n        <li >\n            <input type=\"checkbox\" checked={todo.done} onChange={()=>handleDone(todo.id)}/>\n            <span>{todo.text}</span>\n        </li>\n    )\n}"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AACA,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAmC;EAC/BC,WAAW,CAACC,KAAD,EAAO;IACd;IACA,KAAKC,KAAL,GAAa;MACTC,IAAI,EAAE;IADG,CAAb;EAGH;;EACDC,iBAAiB,GAAE;IACfP,SAAS,CAAC,KAAKI,KAAL,CAAWE,IAAZ,EAAkB;MAAEE,EAAE,EAAE;IAAN,CAAlB,CAAT,CACCC,IADD,CACMC,GAAG,IAAE;MACP,KAAKC,QAAL,CAAc;QAACL,IAAI,EAAEI,GAAG,CAACJ;MAAX,CAAd;IACH,CAHD,EAICM,KAJD,CAIOC,GAAG,IAAEC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAJZ;EAKH;;EAEDG,MAAM,GAAE;IACJ,oBACI;MAAA,wBACG;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QADH,eAEG;QAAA,UAAO,KAAKX,KAAL,CAAWC;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAMH;;AAtB8B;;AA0BnC,eAAe,SAASW,IAAT,OAAgC;EAAA,IAAlB;IAACC,IAAD;IAAMC;EAAN,CAAkB;EAE3C,oBACI;IAAA,wBACI;MAAO,IAAI,EAAC,UAAZ;MAAuB,OAAO,EAAED,IAAI,CAACE,IAArC;MAA2C,QAAQ,EAAE,MAAID,UAAU,CAACD,IAAI,CAACG,EAAN;IAAnE;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,UAAOH,IAAI,CAACZ;IAAZ;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;KARuBW,I"},"metadata":{},"sourceType":"module"}